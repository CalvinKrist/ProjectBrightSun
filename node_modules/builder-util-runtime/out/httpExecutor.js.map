{"version":3,"sources":["../src/httpExecutor.ts"],"names":[],"mappings":"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","sourcesContent":["import { createHash, Hash } from \"crypto\"\nimport _debug from \"debug\"\nimport { createWriteStream } from \"fs-extra-p\"\nimport { IncomingMessage, OutgoingHttpHeaders, RequestOptions } from \"http\"\nimport { Socket } from \"net\"\nimport { Transform } from \"stream\"\nimport { parse as parseUrl, URL } from \"url\"\nimport { CancellationToken } from \"./CancellationToken\"\nimport { newError } from \"./index\"\nimport { ProgressCallbackTransform, ProgressInfo } from \"./ProgressCallbackTransform\"\nimport { createGunzip } from \"zlib\"\n\nconst debug = _debug(\"electron-builder\")\n\nexport interface RequestHeaders extends OutgoingHttpHeaders {\n  [key: string]: string\n}\n\nexport interface DownloadOptions {\n  readonly headers?: OutgoingHttpHeaders | null\n  readonly skipDirCreation?: boolean\n  readonly sha2?: string | null\n  readonly sha512?: string | null\n\n  readonly cancellationToken: CancellationToken\n\n  // noinspection JSUnusedLocalSymbols\n  onProgress?(progress: ProgressInfo): void\n}\n\nexport function createHttpError(response: IncomingMessage, description: any | null = null) {\n  return new HttpError(response.statusCode || -1, `${response.statusCode} ${response.statusMessage}` + (description == null ? \"\" : (\"\\n\" + JSON.stringify(description, null, \"  \"))) + \"\\nHeaders: \" + safeStringifyJson(response.headers), description)\n}\n\nconst HTTP_STATUS_CODES = new Map<number, string>([\n  [429, \"Too many requests\"],\n  [400, \"Bad request\"],\n  [403, \"Forbidden\"],\n  [404, \"Not found\"],\n  [405, \"Method not allowed\"],\n  [406, \"Not acceptable\"],\n  [408, \"Request timeout\"],\n  [413, \"Request entity too large\"],\n  [500, \"Internal server error\"],\n  [502, \"Bad gateway\"],\n  [503, \"Service unavailable\"],\n  [504, \"Gateway timeout\"],\n  [505, \"HTTP version not supported\"],\n])\n\nexport class HttpError extends Error {\n  constructor(readonly statusCode: number, message: string = `HTTP error: ${HTTP_STATUS_CODES.get(statusCode) || statusCode}`, readonly description: any | null = null) {\n    super(message)\n\n    this.name = \"HttpError\"\n  }\n}\n\nexport function parseJson(result: Promise<string | null>) {\n  return result.then(it => it == null || it.length === 0 ? null : JSON.parse(it))\n}\n\nexport abstract class HttpExecutor<REQUEST> {\n  protected readonly maxRedirects = 10\n\n  request(options: RequestOptions, cancellationToken: CancellationToken = new CancellationToken(), data?: { [name: string]: any; } | null): Promise<string | null> {\n    configureRequestOptions(options)\n    const encodedData = data == null ? undefined : Buffer.from(JSON.stringify(data))\n    if (encodedData != null) {\n      options.method = \"post\"\n      options.headers![\"Content-Type\"] = \"application/json\"\n      options.headers![\"Content-Length\"] = encodedData.length\n    }\n    return this.doApiRequest(options, cancellationToken, it => {\n      (it as any).end(encodedData)\n    })\n  }\n\n  doApiRequest(options: RequestOptions, cancellationToken: CancellationToken, requestProcessor: (request: REQUEST, reject: (error: Error) => void) => void, redirectCount: number = 0): Promise<string> {\n    if (debug.enabled) {\n      debug(`Request: ${safeStringifyJson(options)}`)\n    }\n\n    return cancellationToken.createPromise<string>((resolve, reject, onCancel) => {\n      const request = this.doRequest(options, (response: any) => {\n        try {\n          this.handleResponse(response, options, cancellationToken, resolve, reject, redirectCount, requestProcessor)\n        }\n        catch (e) {\n          reject(e)\n        }\n      })\n      this.addErrorAndTimeoutHandlers(request, reject)\n      this.addRedirectHandlers(request, options, reject, redirectCount, options => {\n        this.doApiRequest(options, cancellationToken, requestProcessor, redirectCount)\n          .then(resolve)\n          .catch(reject)\n      })\n      requestProcessor(request, reject)\n      onCancel(() => request.abort())\n    })\n  }\n\n  // noinspection JSUnusedLocalSymbols\n  protected addRedirectHandlers(request: any, options: RequestOptions, reject: (error: Error) => void, redirectCount: number, handler: (options: RequestOptions) => void) {\n    // not required for NodeJS\n  }\n\n  addErrorAndTimeoutHandlers(request: any, reject: (error: Error) => void) {\n    this.addTimeOutHandler(request, reject)\n    request.on(\"error\", reject)\n    request.on(\"aborted\", () => {\n      reject(new Error(\"Request has been aborted by the server\"))\n    })\n  }\n\n  private handleResponse(response: IncomingMessage,\n                         options: RequestOptions,\n                         cancellationToken: CancellationToken,\n                         resolve: (data?: any) => void,\n                         reject: (error: Error) => void,\n                         redirectCount: number, requestProcessor: (request: REQUEST, reject: (error: Error) => void) => void) {\n    if (debug.enabled) {\n      debug(`Response: ${response.statusCode} ${response.statusMessage}, request options: ${safeStringifyJson(options)}`)\n    }\n\n    // we handle any other >= 400 error on request end (read detailed message in the response body)\n    if (response.statusCode === 404) {\n      // error is clear, we don't need to read detailed error description\n      reject(createHttpError(response, `method: ${options.method} url: ${options.protocol || \"https:\"}//${options.hostname}${options.path}\n\nPlease double check that your authentication token is correct. Due to security reasons actual status maybe not reported, but 404.\n`))\n      return\n    }\n    else if (response.statusCode === 204) {\n      // on DELETE request\n      resolve()\n      return\n    }\n\n    const redirectUrl = safeGetHeader(response, \"location\")\n    if (redirectUrl != null) {\n      if (redirectCount > 10) {\n        reject(new Error(\"Too many redirects (> 10)\"))\n        return\n      }\n\n      this.doApiRequest(HttpExecutor.prepareRedirectUrlOptions(redirectUrl, options), cancellationToken, requestProcessor, redirectCount)\n        .then(resolve)\n        .catch(reject)\n      return\n    }\n\n    let stream: NodeJS.ReadableStream = response\n    if ((options as any).gzip) {\n      const gUnzip = createGunzip()\n      gUnzip.on(\"error\", reject)\n      response.pipe(gUnzip)\n      stream = gUnzip\n    }\n    stream.setEncoding(\"utf8\")\n\n    let data = \"\"\n    stream.on(\"data\", (chunk: string) => data += chunk)\n    stream.on(\"end\", () => {\n      try {\n        if (response.statusCode != null && response.statusCode >= 400) {\n          const contentType = safeGetHeader(response, \"content-type\")\n          const isJson = contentType != null && (Array.isArray(contentType) ? contentType.find(it => it.includes(\"json\")) != null : contentType.includes(\"json\"))\n          reject(createHttpError(response, isJson ? JSON.parse(data) : data))\n        }\n        else {\n          resolve(data.length === 0 ? null : data)\n        }\n      }\n      catch (e) {\n        reject(e)\n      }\n    })\n  }\n\n  // noinspection JSUnusedLocalSymbols\n  abstract doRequest(options: any, callback: (response: any) => void): any\n\n  protected doDownload(requestOptions: any, destination: string, redirectCount: number, options: DownloadOptions, callback: (error: Error | null) => void, onCancel: (callback: () => void) => void) {\n    const request = this.doRequest(requestOptions, (response: IncomingMessage) => {\n      if (response.statusCode! >= 400) {\n        callback(new Error(`Cannot download \"${requestOptions.protocol || \"https:\"}//${requestOptions.hostname}${requestOptions.path}\", status ${response.statusCode}: ${response.statusMessage}`))\n        return\n      }\n\n      const redirectUrl = safeGetHeader(response, \"location\")\n      if (redirectUrl != null) {\n        if (redirectCount < this.maxRedirects) {\n          this.doDownload(HttpExecutor.prepareRedirectUrlOptions(redirectUrl, requestOptions), destination, redirectCount++, options, callback, onCancel)\n        }\n        else {\n          callback(new Error(`Too many redirects (> ${this.maxRedirects})`))\n        }\n        return\n      }\n\n      configurePipes(options, response, destination, callback, options.cancellationToken)\n    })\n    this.addErrorAndTimeoutHandlers(request, callback)\n    this.addRedirectHandlers(request, requestOptions, callback, redirectCount, requestOptions => {\n      this.doDownload(requestOptions, destination, redirectCount++, options, callback, onCancel)\n    })\n    onCancel(() => request.abort())\n    request.end()\n  }\n\n  protected addTimeOutHandler(request: any, callback: (error: Error) => void) {\n    request.on(\"socket\", (socket: Socket) => {\n      socket.setTimeout(60 * 1000, () => {\n        callback(new Error(\"Request timed out\"))\n        request.abort()\n      })\n    })\n  }\n\n  static prepareRedirectUrlOptions(redirectUrl: string, options: RequestOptions): RequestOptions {\n    const newOptions = configureRequestOptionsFromUrl(redirectUrl, {...options})\n    const headers = newOptions.headers\n    if (headers != null && headers.authorization != null && (headers.authorization as string).startsWith(\"token\")) {\n      const parsedNewUrl = new URL(redirectUrl)\n      if (parsedNewUrl.hostname.endsWith(\".amazonaws.com\")) {\n        delete headers.authorization\n      }\n    }\n    return newOptions\n  }\n}\n\nexport function configureRequestOptionsFromUrl(url: string, options: RequestOptions) {\n  const parsedUrl = parseUrl(url)\n  options.protocol = parsedUrl.protocol\n  options.hostname = parsedUrl.hostname\n  if (parsedUrl.port == null) {\n    if (options.port != null) {\n      delete options.port\n    }\n  }\n  else {\n    options.port = parsedUrl.port\n  }\n  options.path = parsedUrl.path\n  return configureRequestOptions(options)\n}\n\nexport class DigestTransform extends Transform {\n  private readonly digester: Hash\n\n  private _actual: string | null = null\n\n  // noinspection JSUnusedGlobalSymbols\n  get actual() {\n    return this._actual\n  }\n\n  isValidateOnEnd: boolean = true\n\n  constructor(readonly expected: string, private readonly algorithm: string = \"sha512\", private readonly encoding: \"hex\" | \"base64\" | \"latin1\" = \"base64\") {\n    super()\n\n    this.digester = createHash(algorithm)\n  }\n\n  // noinspection JSUnusedGlobalSymbols\n  _transform(chunk: Buffer, encoding: string, callback: any) {\n    this.digester.update(chunk)\n    callback(null, chunk)\n  }\n\n  // noinspection JSUnusedGlobalSymbols\n  _flush(callback: any): void {\n    this._actual = this.digester.digest(this.encoding)\n\n    if (this.isValidateOnEnd) {\n      try {\n        this.validate()\n      }\n      catch (e) {\n        callback(e)\n        return\n      }\n    }\n\n    callback(null)\n  }\n\n  validate() {\n    if (this._actual == null) {\n      throw newError(\"Not finished yet\", \"ERR_STREAM_NOT_FINISHED\")\n    }\n\n    if (this._actual !== this.expected) {\n      throw newError(`${this.algorithm} checksum mismatch, expected ${this.expected}, got ${this._actual}`, \"ERR_CHECKSUM_MISMATCH\")\n    }\n\n    return null\n  }\n}\n\nfunction checkSha2(sha2Header: string | null | undefined, sha2: string | null | undefined, callback: (error: Error | null) => void): boolean {\n  if (sha2Header != null && sha2 != null) {\n    // todo why bintray doesn't send this header always\n    if (sha2Header == null) {\n      callback(new Error(\"checksum is required, but server response doesn't contain X-Checksum-Sha2 header\"))\n      return false\n    }\n    else if (sha2Header !== sha2) {\n      callback(new Error(`checksum mismatch: expected ${sha2} but got ${sha2Header} (X-Checksum-Sha2 header)`))\n      return false\n    }\n  }\n  return true\n}\n\nexport function safeGetHeader(response: any, headerKey: string) {\n  const value = response.headers[headerKey]\n  if (value == null) {\n    return null\n  }\n  else if (Array.isArray(value)) {\n    // electron API\n    return value.length === 0 ? null : value[value.length - 1]\n  }\n  else {\n    return value\n  }\n}\n\nfunction configurePipes(options: DownloadOptions, response: any, destination: string, callback: (error: Error | null) => void, cancellationToken: CancellationToken) {\n  if (!checkSha2(safeGetHeader(response, \"X-Checksum-Sha2\"), options.sha2, callback)) {\n    return\n  }\n\n  const streams: Array<any> = []\n  if (options.onProgress != null) {\n    const contentLength = safeGetHeader(response, \"content-length\")\n    if (contentLength != null) {\n      streams.push(new ProgressCallbackTransform(parseInt(contentLength, 10), options.cancellationToken, options.onProgress))\n    }\n  }\n\n  const sha512 = options.sha512\n  if (sha512 != null) {\n    streams.push(new DigestTransform(sha512, \"sha512\", sha512.length === 128 && !sha512.includes(\"+\") && !sha512.includes(\"Z\") && !sha512.includes(\"=\") ? \"hex\" : \"base64\"))\n  }\n  else if (options.sha2 != null) {\n    streams.push(new DigestTransform(options.sha2, \"sha256\", \"hex\"))\n  }\n\n  const fileOut = createWriteStream(destination)\n  streams.push(fileOut)\n\n  let lastStream = response\n  for (const stream of streams) {\n    stream.on(\"error\", (error: Error) => {\n      if (!cancellationToken.cancelled) {\n        callback(error)\n      }\n    })\n    lastStream = lastStream.pipe(stream)\n  }\n\n  fileOut.on(\"finish\", () => {\n    (fileOut.close as any)(callback)\n  })\n}\n\nexport function configureRequestOptions(options: RequestOptions, token?: string | null, method?: \"GET\" | \"DELETE\" | \"PUT\"): RequestOptions {\n  if (method != null) {\n    options.method = method\n  }\n\n  let headers = options.headers\n  if (headers == null) {\n    headers = {}\n    options.headers = headers\n  }\n  if (token != null) {\n    (headers as any).authorization = token.startsWith(\"Basic\") ? token : `token ${token}`\n  }\n  if (headers[\"User-Agent\"] == null) {\n    headers[\"User-Agent\"] = \"electron-builder\"\n  }\n\n  if ((method == null || method === \"GET\") || headers[\"Cache-Control\"] == null) {\n    headers[\"Cache-Control\"] = \"no-cache\"\n  }\n\n  // do not specify for node (in any case we use https module)\n  if (options.protocol == null && (process.versions as any).electron != null) {\n    options.protocol = \"https:\"\n  }\n  return options\n}\n\nexport function safeStringifyJson(data: any, skippedNames?: Set<string>) {\n  return JSON.stringify(data, (name, value) => {\n    if (name.endsWith(\"authorization\") || name.endsWith(\"Password\") || name.endsWith(\"PASSWORD\") || name.endsWith(\"Token\") || name.includes(\"password\") || name.includes(\"token\") || (skippedNames != null && skippedNames.has(name))) {\n      return \"<stripped sensitive data>\"\n    }\n    return value\n  }, 2)\n}"],"sourceRoot":""}
