{"version":3,"sources":["../../src/remoteBuilder/ProjectInfoManager.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;;;;AAGM,MAAO,kBAAP,CAAyB;AAG7B,cAAqB,QAArB,EAAuC;AAAlB,SAAA,QAAA,GAAA,QAAA;AAFZ,SAAA,QAAA,GAAW,KAAI,eAAJ,EAAS,MAAM,KAAK,4BAAL,EAAf,CAAX;AAGR;;AAEa,8BAAN,GAAkC;AAAA;;AAAA;AACxC,YAAM,WAAW,MAAK,QAAtB;AACA,YAAM,UAAU,MAAM,SAAS,cAAT,CAAwB,aAAxB,CAAsC;AAAC,gBAAQ;AAAT,OAAtC,CAAtB,CAFwC,CAGxC;;AACA,YAAM,OAAY;AAChB,kBAAU,SAAS,QADH;AAEhB,uBAAe,SAAS,MAFR;AAGhB,wBAAgB,MAAM,SAAS,cAHf;AAIhB,8BAAsB,KAAK,QAAL,CAAc,SAAS,iBAAvB;AAJN,OAAlB;;AAMA,UAAI,SAAS,QAAT,KAAsB,SAAS,WAA/B,IAA8C,SAAS,WAAT,IAAwB,IAA1E,EAAgF;AAC9E,aAAK,WAAL,GAAmB,SAAS,WAA5B;AACD;;AACD,YAAM,OAAO,KAAK,IAAL,CAAU,OAAV,EAAmB,WAAnB,CAAb;AACA,YAAM,4BAAW,IAAX,EAAiB,IAAjB,CAAN;AACA,aAAO,IAAP;AAfwC;AAgBzC;;AAtB4B,C","sourcesContent":["import { outputJson } from \"fs-extra-p\"\nimport { Lazy } from \"lazy-val\"\nimport * as path from \"path\"\nimport { Packager } from \"../packager\"\n\nexport class ProjectInfoManager {\n  readonly infoFile = new Lazy(() => this.saveConfigurationAndMetadata())\n\n  constructor(readonly packager: Packager) {\n  }\n\n  private async saveConfigurationAndMetadata() {\n    const packager = this.packager\n    const tempDir = await packager.tempDirManager.createTempDir({prefix: \"remote-build-metadata\"})\n    // we cannot use getTempFile because file name must be constant\n    const info: any = {\n      metadata: packager.metadata,\n      configuration: packager.config,\n      repositoryInfo: await packager.repositoryInfo,\n      buildResourceDirName: path.basename(packager.buildResourcesDir)\n    }\n    if (packager.metadata !== packager.devMetadata && packager.devMetadata != null) {\n      info.devMetadata = packager.devMetadata\n    }\n    const file = path.join(tempDir, \"info.json\")\n    await outputJson(file, info)\n    return file\n  }\n}"],"sourceRoot":""}
