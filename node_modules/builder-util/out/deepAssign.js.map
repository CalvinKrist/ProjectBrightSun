{"version":3,"sources":["../src/deepAssign.ts"],"names":[],"mappings":";;;;;;;AAAA,SAAS,QAAT,CAAkB,CAAlB,EAAwB;AACtB,MAAI,MAAM,OAAN,CAAc,CAAd,CAAJ,EAAsB;AACpB,WAAO,KAAP;AACD;;AAED,QAAM,OAAO,OAAO,CAApB;AACA,SAAO,SAAS,QAAT,IAAqB,SAAS,UAArC;AACD;;AAED,SAAS,SAAT,CAAmB,MAAnB,EAAgC,IAAhC,EAA2C,GAA3C,EAAsD;AACpD,QAAM,QAAQ,KAAK,GAAL,CAAd,CADoD,CAEpD;;AACA,MAAI,UAAU,SAAd,EAAyB;AACvB;AACD;;AAED,QAAM,YAAY,OAAO,GAAP,CAAlB;;AACA,MAAI,aAAa,IAAb,IAAqB,SAAS,IAA9B,IAAsC,CAAC,SAAS,SAAT,CAAvC,IAA8D,CAAC,SAAS,KAAT,CAAnE,EAAoF;AAClF,WAAO,GAAP,IAAc,KAAd;AACD,GAFD,MAGK;AACH,WAAO,GAAP,IAAc,OAAO,SAAP,EAAkB,KAAlB,CAAd;AACD;AACF;;AAED,SAAS,MAAT,CAAgB,EAAhB,EAAyB,IAAzB,EAAkC;AAChC,MAAI,OAAO,IAAX,EAAiB;AACf,SAAK,MAAM,GAAX,IAAkB,OAAO,mBAAP,CAA2B,IAA3B,CAAlB,EAAoD;AAClD,gBAAU,EAAV,EAAc,IAAd,EAAoB,GAApB;AACD;AACF;;AACD,SAAO,EAAP;AACD;;AAEK,SAAU,UAAV,CAAwB,MAAxB,EAAmC,GAAG,OAAtC,EAAyD;AAC7D,OAAK,MAAM,CAAX,IAAgB,OAAhB,EAAyB;AACvB,QAAI,KAAK,IAAT,EAAe;AACb,aAAO,MAAP,EAAe,CAAf;AACD;AACF;;AACD,SAAO,MAAP;AACD,C","sourcesContent":["function isObject(x: any) {\n  if (Array.isArray(x)) {\n    return false\n  }\n\n  const type = typeof x\n  return type === \"object\" || type === \"function\"\n}\n\nfunction assignKey(target: any, from: any, key: string) {\n  const value = from[key]\n  // https://github.com/electron-userland/electron-builder/pull/562\n  if (value === undefined) {\n    return\n  }\n\n  const prevValue = target[key]\n  if (prevValue == null || value == null || !isObject(prevValue) || !isObject(value)) {\n    target[key] = value\n  }\n  else {\n    target[key] = assign(prevValue, value)\n  }\n}\n\nfunction assign(to: any, from: any) {\n  if (to !== from) {\n    for (const key of Object.getOwnPropertyNames(from)) {\n      assignKey(to, from, key)\n    }\n  }\n  return to\n}\n\nexport function deepAssign<T>(target: T, ...objects: Array<any>): T {\n  for (const o of objects) {\n    if (o != null) {\n      assign(target, o)\n    }\n  }\n  return target\n}"],"sourceRoot":""}
