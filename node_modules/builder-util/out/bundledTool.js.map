{"version":3,"sources":["../src/bundledTool.ts"],"names":[],"mappings":";;;;;;;;;AACO,MAAM,eAAe;AAAC,WAAS,MAAM;AAAhB,CAArB;;;AAOD,SAAU,UAAV,CAAqB,QAArB,EAA0D,SAA1D,EAAkF;AACtF,QAAM,iBAAiB,WAAW,SAAS,KAAT,CAAe,GAAf,CAAX,GAAiC,EAAxD;AACA,SAAO,UAAU,MAAV,CAAiB,cAAjB,EAAiC,MAAjC,CAAwC,MAAM,GAAG,MAAH,GAAY,CAA1D,EAA6D,IAA7D,CAAkE,GAAlE,CAAP;AACD;;AAEK,SAAU,cAAV,CAAyB,OAAzB,EAA+C;AACnD;AACA,SAAA,OAAA,MAAA,CAAA,EAAA,EACK,QAAQ,GADb,EACgB;AACd,uBAAmB,WAAW,QAAQ,GAAR,CAAY,iBAAvB,EAA0C,OAA1C;AADL,GADhB,CAAA;AAID,C","sourcesContent":["// 2 minutes\nexport const EXEC_TIMEOUT = {timeout: 120 * 1000}\n\nexport interface ToolInfo {\n  path: string\n  env?: any\n}\n\nexport function computeEnv(oldValue: string | null | undefined, newValues: Array<string>): string {\n  const parsedOldValue = oldValue ? oldValue.split(\":\") : []\n  return newValues.concat(parsedOldValue).filter(it => it.length > 0).join(\":\")\n}\n\nexport function computeToolEnv(libPath: Array<string>): any {\n  // noinspection SpellCheckingInspection\n  return {\n    ...process.env,\n    DYLD_LIBRARY_PATH: computeEnv(process.env.DYLD_LIBRARY_PATH, libPath)\n  }\n}"],"sourceRoot":""}
