{"version":3,"sources":["../src/util.ts"],"names":[],"mappings":"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","sourcesContent":["import { path7za } from \"7zip-bin\"\nimport { appBuilderPath } from \"app-builder-bin\"\nimport { safeStringifyJson } from \"builder-util-runtime\"\nimport chalk from \"chalk\"\nimport { ChildProcess, execFile, ExecFileOptions, spawn as _spawn, SpawnOptions } from \"child_process\"\nimport { createHash } from \"crypto\"\nimport _debug from \"debug\"\nimport { safeDump } from \"js-yaml\"\nimport * as path from \"path\"\nimport \"source-map-support/register\"\nimport { debug, log } from \"./log\"\nimport isCI from \"is-ci\"\n\nexport { safeStringifyJson } from \"builder-util-runtime\"\nexport { TmpDir } from \"temp-file\"\nexport { log, debug } from \"./log\"\nexport { isMacOsSierra, isCanSignDmg } from \"./macosVersion\"\nexport { execWine, prepareWindowsExecutableArgs } from \"./wine\"\nexport { Arch, getArchCliNames, toLinuxArchString, getArchSuffix, ArchType, archFromString } from \"./arch\"\nexport { AsyncTaskManager } from \"./asyncTaskManager\"\nexport { DebugLogger } from \"./DebugLogger\"\n\nexport { hashFile } from \"./hash\"\nexport { copyFile } from \"./fs\"\nexport { asArray } from \"builder-util-runtime\"\n\nexport { deepAssign } from \"./deepAssign\"\n\nexport const debug7z = _debug(\"electron-builder:7z\")\n\nexport function serializeToYaml(object: object, skipInvalid = false) {\n  return safeDump(object, {lineWidth: 8000, skipInvalid})\n}\n\nexport function removePassword(input: string) {\n  return input.replace(/(-String |-P |pass:| \\/p |-pass |--secretKey |--accessKey )([^ ]+)/g, (match, p1, p2) => {\n    if (p1.trim() === \"/p\" && p2.startsWith(\"\\\\\\\\Mac\\\\Host\\\\\\\\\")) {\n      // appx /p\n      return `${p1}${p2}`\n    }\n    return `${p1}${createHash(\"sha256\").update(p2).digest(\"hex\")} (sha256 hash)`\n  })\n}\n\nfunction getProcessEnv(env: { [key: string]: string | undefined } | undefined | null) {\n  if (process.platform === \"win32\") {\n    return env\n  }\n\n  const finalEnv = {\n    ...(env || process.env)\n  }\n\n  // without LC_CTYPE dpkg can returns encoded unicode symbols\n  // set LC_CTYPE to avoid crash https://github.com/electron-userland/electron-builder/issues/503 Even \"en_DE.UTF-8\" leads to error.\n  const locale = process.platform === \"linux\" ? (process.env.LANG || \"C.UTF-8\") : \"en_US.UTF-8\"\n  finalEnv.LANG = locale\n  finalEnv.LC_CTYPE = locale\n  finalEnv.LC_ALL = locale\n  return finalEnv\n}\n\nexport function exec(file: string, args?: Array<string> | null, options?: ExecFileOptions, isLogOutIfDebug = true): Promise<string> {\n  if (log.isDebugEnabled) {\n    const logFields: any = {\n      file,\n      args: args == null ? \"\" : removePassword(args.join(\" \")),\n    }\n    if (options != null) {\n      if (options.cwd != null) {\n        logFields.cwd = options.cwd\n      }\n\n      if (options.env != null) {\n        const diffEnv = {...options.env}\n        for (const name of Object.keys(process.env)) {\n          if (process.env[name] === options.env[name]) {\n            delete diffEnv[name]\n          }\n        }\n        logFields.env = safeStringifyJson(diffEnv)\n      }\n    }\n\n    log.debug(logFields, \"executing\")\n  }\n\n  return new Promise<string>((resolve, reject) => {\n    execFile(file, args, {\n    ...options,\n    maxBuffer: 10 * 1024 * 1024,\n    env: getProcessEnv(options == null ? null : options.env),\n  }, (error, stdout, stderr) => {\n      if (error == null) {\n        if (isLogOutIfDebug && log.isDebugEnabled) {\n          const logFields: any = {\n            file,\n          }\n          if (stdout.length > 0) {\n            logFields.stdout = stdout\n          }\n          if (stderr.length > 0) {\n            logFields.stderr = file.endsWith(\"wine\") ? removeWineSpam(stderr.toString()) : stderr\n          }\n\n          log.debug(logFields, \"executed\")\n        }\n        resolve(stdout.toString())\n      }\n      else {\n        let message = chalk.red(removePassword(`Exit code: ${(error as any).code}. ${error.message}`))\n        if (stdout.length !== 0) {\n          if (file.endsWith(\"wine\")) {\n            stdout = removeWineSpam(stdout.toString())\n          }\n          message += `\\n${chalk.yellow(stdout.toString())}`\n        }\n        if (stderr.length !== 0) {\n          if (file.endsWith(\"wine\")) {\n            stderr = removeWineSpam(stderr.toString())\n          }\n          message += `\\n${chalk.red(stderr.toString())}`\n        }\n\n        reject(new Error(message))\n      }\n    })\n  })\n}\n\nfunction removeWineSpam(out: string) {\n  return out.toString()\n    .split(\"\\n\")\n    .filter(it => !it.includes(\"wine: cannot find L\\\"C:\\\\\\\\windows\\\\\\\\system32\\\\\\\\winemenubuilder.exe\\\"\") && !it.includes(\"err:wineboot:ProcessRunKeys Error running cmd L\\\"C:\\\\\\\\windows\\\\\\\\system32\\\\\\\\winemenubuilder.exe\"))\n    .join(\"\\n\")\n\n}\n\nexport interface ExtraSpawnOptions {\n  isPipeInput?: boolean\n}\n\nfunction logSpawn(command: string, args: Array<string>, options: SpawnOptions) {\n  // use general debug.enabled to log spawn, because it doesn't produce a lot of output (the only line), but important in any case\n  if (!log.isDebugEnabled) {\n    return\n  }\n\n  const argsString = args.join(\" \")\n  const logFields: any = {\n    command: command + \" \" + (command === \"docker\" ? argsString : removePassword(argsString)),\n  }\n  if (options != null && options.cwd != null) {\n    logFields.cwd = options.cwd\n  }\n  log.debug(logFields, \"spawning\")\n}\n\nexport function doSpawn(command: string, args: Array<string>, options?: SpawnOptions, extraOptions?: ExtraSpawnOptions): ChildProcess {\n  if (options == null) {\n    options = {}\n  }\n\n  options.env = getProcessEnv(options.env)\n\n  if (options.stdio == null) {\n    const isDebugEnabled = debug.enabled\n    // do not ignore stdout/stderr if not debug, because in this case we will read into buffer and print on error\n    options.stdio = [extraOptions != null && extraOptions.isPipeInput ? \"pipe\" : \"ignore\", isDebugEnabled ? \"inherit\" : \"pipe\", isDebugEnabled ? \"inherit\" : \"pipe\"]\n  }\n\n  logSpawn(command, args, options)\n  try {\n    return _spawn(command, args, options)\n  }\n  catch (e) {\n    throw new Error(`Cannot spawn ${command}: ${e.stack || e}`)\n  }\n}\n\nexport function spawnAndWrite(command: string, args: Array<string>, data: string, options?: SpawnOptions) {\n  const childProcess = doSpawn(command, args, options, {isPipeInput: true})\n  const timeout = setTimeout(() => childProcess.kill(), 4 * 60 * 1000)\n  return new Promise<any>((resolve, reject) => {\n    handleProcess(\"close\", childProcess, command, () => {\n      try {\n        clearTimeout(timeout)\n      }\n      finally {\n        resolve()\n      }\n    }, error => {\n      try {\n        clearTimeout(timeout)\n      }\n      finally {\n        reject(error.stack || error.toString())\n      }\n    })\n\n    childProcess.stdin.end(data)\n  })\n}\n\nexport function spawn(command: string, args?: Array<string> | null, options?: SpawnOptions, extraOptions?: ExtraSpawnOptions): Promise<any> {\n  return new Promise<any>((resolve, reject) => {\n    handleProcess(\"close\", doSpawn(command, args || [], options, extraOptions), command, resolve, reject)\n  })\n}\n\nfunction handleProcess(event: string, childProcess: ChildProcess, command: string, resolve: ((value?: any) => void) | null, reject: (reason?: any) => void) {\n  childProcess.on(\"error\", reject)\n\n  let out = \"\"\n  if (childProcess.stdout != null) {\n    childProcess.stdout.on(\"data\", (data: string) => {\n      out += data\n    })\n  }\n\n  let errorOut = \"\"\n  if (childProcess.stderr != null) {\n    childProcess.stderr.on(\"data\", (data: string) => {\n      errorOut += data\n    })\n  }\n\n  childProcess.once(event, (code: number) => {\n    if (log.isDebugEnabled) {\n      const fields: any = {\n        command: path.basename(command),\n        code,\n        pid: childProcess.pid,\n      }\n      if (out.length > 0) {\n        fields.out = out\n      }\n      log.debug(fields, \"exited\")\n    }\n\n    if (code === 0) {\n      if (resolve != null) {\n        resolve(out)\n      }\n    }\n    else {\n      function formatOut(text: string, title: string) {\n        return text.length === 0 ? \"\" : `\\n${title}:\\n${text}`\n      }\n\n      reject(new Error(`${command} exited with code ${code}${formatOut(out, \"Output\")}${formatOut(errorOut, \"Error output\")}`))\n    }\n  })\n}\n\nexport function use<T, R>(value: T | null, task: (it: T) => R): R | null {\n  return value == null ? null : task(value)\n}\n\nexport function debug7zArgs(command: \"a\" | \"x\"): Array<string> {\n  const args = [command, \"-bd\"]\n  if (debug7z.enabled) {\n    args.push(\"-bb\")\n  }\n  return args\n}\n\nexport function isEmptyOrSpaces(s: string | null | undefined): s is \"\" | null | undefined {\n  return s == null || s.trim().length === 0\n}\n\nexport function isTokenCharValid(token: string) {\n  return /^[\\w\\/=+-]+$/.test(token)\n}\n\n// fpm bug - rpm build --description is not escaped, well... decided to replace quite to smart quote\n// http://leancrew.com/all-this/2010/11/smart-quotes-in-javascript/\nexport function smarten(s: string): string {\n  // opening singles\n  s = s.replace(/(^|[-\\u2014\\s(\\[\"])'/g, \"$1\\u2018\")\n  // closing singles & apostrophes\n  s = s.replace(/'/g, \"\\u2019\")\n  // opening doubles\n  s = s.replace(/(^|[-\\u2014/\\[(\\u2018\\s])\"/g, \"$1\\u201c\")\n  // closing doubles\n  s = s.replace(/\"/g, \"\\u201d\")\n  return s\n}\n\nexport function addValue<K, T>(map: Map<K, Array<T>>, key: K, value: T) {\n  const list = map.get(key)\n  if (list == null) {\n    map.set(key, [value])\n  }\n  else if (!list.includes(value)) {\n    list.push(value)\n  }\n}\n\nexport function replaceDefault(inList: Array<string> | null | undefined, defaultList: Array<string>): Array<string> {\n  if (inList == null || (inList.length === 1 && inList[0] === \"default\")) {\n    return defaultList\n  }\n\n  const index = inList.indexOf(\"default\")\n  if (index >= 0) {\n    const list = inList.slice(0, index)\n    list.push(...defaultList)\n    if (index !== (inList.length - 1)) {\n      list.push(...inList.slice(index + 1))\n    }\n    inList = list\n  }\n  return inList\n}\n\nexport function getPlatformIconFileName(value: string | null | undefined, isMac: boolean) {\n  if (value === undefined) {\n    return undefined\n  }\n  if (value === null) {\n    return null\n  }\n\n  if (!value.includes(\".\")) {\n    return `${value}.${isMac ? \"icns\" : \"ico\"}`\n  }\n\n  return value.replace(isMac ? \".ico\" : \".icns\", isMac ? \".icns\" : \".ico\")\n}\n\nexport function isPullRequest() {\n  // TRAVIS_PULL_REQUEST is set to the pull request number if the current job is a pull request build, or false if it’s not.\n  function isSet(value: string | undefined) {\n    // value can be or null, or empty string\n    return value && value !== \"false\"\n  }\n\n  return isSet(process.env.TRAVIS_PULL_REQUEST) || isSet(process.env.CI_PULL_REQUEST) || isSet(process.env.CI_PULL_REQUESTS) || isSet(process.env.BITRISE_PULL_REQUEST) || isSet(process.env.APPVEYOR_PULL_REQUEST_NUMBER)\n}\n\nexport function isEnvTrue(value: string | null | undefined) {\n  if (value != null) {\n    value = value.trim()\n  }\n  return value === \"true\" || value === \"\" || value === \"1\"\n}\n\nexport class InvalidConfigurationError extends Error {\n  constructor(message: string, code: string = \"ERR_ELECTRON_BUILDER_INVALID_CONFIGURATION\") {\n    super(message);\n\n    (this as any).code = code\n  }\n}\n\nexport function executeAppBuilder(args: Array<string>, childProcessConsumer?: (childProcess: ChildProcess) => void): Promise<string> {\n  return new Promise<string>((resolve, reject) => {\n    const command = appBuilderPath\n    const env: any = {\n      // before process.env to allow customize by user\n      SNAP_USE_HARD_LINKS_IF_POSSIBLE: isCI.toString(),\n      ...process.env,\n      SZA_PATH: path7za,\n    }\n    const cacheEnv = process.env.ELECTRON_BUILDER_CACHE\n    if (cacheEnv != null && cacheEnv.length > 0) {\n      env.ELECTRON_BUILDER_CACHE = path.resolve(cacheEnv)\n    }\n    const childProcess = doSpawn(command, args, {\n      env,\n      stdio: [\"ignore\", \"pipe\", process.stdout]\n    })\n    if (childProcessConsumer != null) {\n      childProcessConsumer(childProcess)\n    }\n    handleProcess(\"close\", childProcess, command, resolve, reject)\n  })\n}\n\nexport function executeAppBuilderAsJson<T>(args: Array<string>): Promise<T> {\n  return executeAppBuilder(args)\n    .then(rawResult => {\n      try {\n        return JSON.parse(rawResult) as T\n      }\n      catch (e) {\n        throw new Error(`Cannot parse result: ${e.message}: \"${rawResult}\"`)\n      }\n    })\n}"],"sourceRoot":""}
