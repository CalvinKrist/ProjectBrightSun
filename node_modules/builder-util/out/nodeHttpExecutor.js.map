{"version":3,"sources":["../src/nodeHttpExecutor.ts"],"names":[],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEM,MAAO,gBAAP,SAAgC,kCAAhC,CAA2D;AAC/D;AACA,WAAS,GAAT,EAAsB,WAAtB,EAA2C,OAA3C,EAAmE;AACjE,WAAO,6BAAU,GAAV,EAAe,WAAf,EAA4B,WAAW,IAAX,GAAkB,IAAlB,GAAyB,QAAQ,MAA7D,EACJ,IADI,CACC,MAAM,WADP,CAAP;AAED,GAL8D,CAO/D;AACA;;;AACA,YAAU,OAAV,EAAwB,QAAxB,EAAyD;AACvD,WAAO,CAAC,QAAQ,QAAR,KAAqB,OAArB,GAA+B,eAA/B,GAA6C,QAAM,OAApD,EAA6D,OAA7D,EAAsE,QAAtE,CAAP;AACD;;AAX8D;;;AAc1D,MAAM,eAAiC,IAAI,gBAAJ,EAAvC,C","sourcesContent":["import { HttpExecutor, DownloadOptions } from \"builder-util-runtime\"\nimport { download as _download } from \"./binDownload\"\nimport { ClientRequest, request as httpRequest } from \"http\"\nimport * as https from \"https\"\n\nexport class NodeHttpExecutor extends HttpExecutor<ClientRequest> {\n  // used only in tests of electron-updater\n  download(url: string, destination: string, options: DownloadOptions): Promise<string> {\n    return _download(url, destination, options == null ? null : options.sha512)\n      .then(() => destination)\n  }\n\n  // noinspection JSMethodCanBeStatic\n  // noinspection JSUnusedGlobalSymbols\n  doRequest(options: any, callback: (response: any) => void): any {\n    return (options.protocol === \"http:\" ? httpRequest : https.request)(options, callback)\n  }\n}\n\nexport const httpExecutor: NodeHttpExecutor = new NodeHttpExecutor()"],"sourceRoot":""}
