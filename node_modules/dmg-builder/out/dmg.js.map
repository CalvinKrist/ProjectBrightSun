{"version":3,"sources":["../src/dmg.ts"],"names":[],"mappings":"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","sourcesContent":["import { Arch, AsyncTaskManager, exec, InvalidConfigurationError, isCanSignDmg, isEmptyOrSpaces, log, spawn, deepAssign, executeAppBuilder } from \"builder-util\"\nimport { CancellationToken } from \"builder-util-runtime\"\nimport { copyDir, copyFile, exists, statOrNull } from \"builder-util/out/fs\"\nimport { addLicenseToDmg } from \"./dmgLicense\"\nimport { applyProperties, attachAndExecute, computeBackground, computeBackgroundColor, detach, transformBackgroundFileIfNeed } from \"./dmgUtil\"\nimport { stat } from \"fs-extra-p\"\nimport * as path from \"path\"\nimport sanitizeFileName from \"sanitize-filename\"\nimport { findIdentity, isSignAllowed } from \"app-builder-lib/out/codeSign\"\nimport { Target, DmgOptions } from \"app-builder-lib\"\nimport MacPackager from \"app-builder-lib/out/macPackager\"\nimport { createBlockmap } from \"app-builder-lib/out/targets/differentialUpdateInfoBuilder\"\n\nexport class DmgTarget extends Target {\n  readonly options: DmgOptions = this.packager.config.dmg || Object.create(null)\n\n  constructor(private readonly packager: MacPackager, readonly outDir: string) {\n    super(\"dmg\")\n  }\n\n  async build(appPath: string, arch: Arch) {\n    const packager = this.packager\n    // tslint:disable-next-line:no-invalid-template-strings\n    const artifactName = packager.expandArtifactNamePattern(packager.config.dmg, \"dmg\", null, \"${productName}-\" + (packager.platformSpecificBuildOptions.bundleShortVersion || \"${version}\") + \".${ext}\")\n    const artifactPath = path.join(this.outDir, artifactName)\n    this.logBuilding(\"DMG\", artifactPath, arch)\n\n    const specification = await this.computeDmgOptions()\n    const volumeName = sanitizeFileName(this.computeVolumeName(specification.title))\n\n    const tempDmg = await createStageDmg(await packager.getTempFile(\".dmg\"), appPath, volumeName)\n\n    // https://github.com/electron-userland/electron-builder/issues/2115\n    const backgroundFile = specification.background == null ? null : await transformBackgroundFileIfNeed(specification.background, packager.info.tempDirManager)\n    const finalSize = await computeAssetSize(packager.info.cancellationToken, tempDmg, specification, backgroundFile)\n    await exec(\"hdiutil\", [\"resize\", \"-size\", finalSize.toString(), tempDmg])\n\n    const volumePath = path.join(\"/Volumes\", volumeName)\n    if (await exists(volumePath)) {\n      log.debug({volumePath}, \"unmounting previous disk image\")\n      await detach(volumePath)\n    }\n\n    if (!await attachAndExecute(tempDmg, true, () => customizeDmg(volumePath, specification, packager, backgroundFile))) {\n      return\n    }\n\n    // dmg file must not exist otherwise hdiutil failed (https://github.com/electron-userland/electron-builder/issues/1308#issuecomment-282847594), so, -ov must be specified\n    const args = [\"convert\", tempDmg, \"-ov\", \"-format\", specification.format!, \"-o\", artifactPath]\n    if (specification.format === \"UDZO\") {\n      args.push(\"-imagekey\", `zlib-level=${process.env.ELECTRON_BUILDER_COMPRESSION_LEVEL || \"9\"}`)\n    }\n    await spawn(\"hdiutil\", addLogLevel(args))\n    if (this.options.internetEnabled) {\n      await exec(\"hdiutil\", addLogLevel([\"internet-enable\"]).concat(artifactPath))\n    }\n\n    const licenseData = await addLicenseToDmg(packager, artifactPath)\n    if (packager.packagerOptions.effectiveOptionComputed != null) {\n      await packager.packagerOptions.effectiveOptionComputed({licenseData})\n    }\n\n    await this.signDmg(artifactPath)\n\n    const safeArtifactName = packager.computeSafeArtifactName(artifactName, \"dmg\")\n    const updateInfo = await createBlockmap(artifactPath, this, packager, safeArtifactName)\n    packager.info.dispatchArtifactCreated({\n      file: artifactPath,\n      safeArtifactName,\n      target: this,\n      arch,\n      packager,\n      isWriteUpdateInfo: true,\n      updateInfo,\n    })\n  }\n\n  private async signDmg(artifactPath: string) {\n    if (!isSignAllowed(false)) {\n      return\n    }\n\n    if (!(await isCanSignDmg())) {\n      log.warn({solution: \"please update OS\"}, \"at least macOS 10.11.5 is required to sign DMG\")\n    }\n\n    const packager = this.packager\n    const qualifier = packager.platformSpecificBuildOptions.identity\n    // explicitly disabled if set to null\n    if (qualifier === null) {\n      // macPackager already somehow handle this situation, so, here just return\n      return\n    }\n\n    const keychainName = (await packager.codeSigningInfo.value).keychainName\n    const certificateType = \"Developer ID Application\"\n    let identity = await findIdentity(certificateType, qualifier, keychainName)\n    if (identity == null) {\n      identity = await findIdentity(\"Mac Developer\", qualifier, keychainName)\n      if (identity == null) {\n        return\n      }\n    }\n\n    const args = [\"--sign\", identity.hash]\n    if (keychainName != null) {\n      args.push(\"--keychain\", keychainName)\n    }\n    args.push(artifactPath)\n    await exec(\"codesign\", args)\n  }\n\n  computeVolumeName(custom?: string | null): string {\n    const appInfo = this.packager.appInfo\n    const shortVersion = this.packager.platformSpecificBuildOptions.bundleShortVersion || appInfo.version\n\n    if (custom == null) {\n      return `${appInfo.productFilename} ${shortVersion}`\n    }\n\n    return custom\n      .replace(/\\${shortVersion}/g, shortVersion)\n      .replace(/\\${version}/g, appInfo.version)\n      .replace(/\\${name}/g, appInfo.name)\n      .replace(/\\${productName}/g, appInfo.productName)\n  }\n\n  // public to test\n  async computeDmgOptions(): Promise<DmgOptions> {\n    // appdmg\n    const appdmgWindow = (this.options.window as any) || {}\n    const oldPosition = appdmgWindow.position\n    const oldSize = appdmgWindow.size\n    const oldIconSize = (this.options as any)[\"icon-size\"]\n    const oldBackgroundColor = (this.options as any)[\"background-color\"]\n    if (oldPosition != null) {\n      log.warn({solution: \"use dmg.window\"}, \"dmg.window.position is deprecated\")\n    }\n    if (oldSize != null) {\n      log.warn({solution: \"use dmg.window\"}, \"dmg.window.size is deprecated\")\n    }\n    if (oldIconSize != null) {\n      log.warn({solution: \"use dmg.iconSize\"}, \"dmg.icon-size is deprecated\")\n    }\n    if (oldBackgroundColor != null) {\n      log.warn({solution: \"use dmg.backgroundColor\"}, \"dmg.background-color is deprecated\")\n    }\n\n    const packager = this.packager\n    const specification = deepAssign<DmgOptions>({\n        window: {\n          x: 400,\n          y: 100,\n        },\n        iconSize: oldIconSize,\n        backgroundColor: oldBackgroundColor,\n        icon: \"icon\" in this.options ? undefined : await packager.getIconPath()\n      },\n      this.options,\n      oldPosition == null ? null : {\n        window: {\n          x: oldPosition.x,\n          y: oldPosition.y,\n        }\n      },\n      oldSize == null ? null : {\n        window: {\n          width: oldSize.width,\n          height: oldSize.height,\n        }\n      })\n\n    if (specification.icon != null && isEmptyOrSpaces(specification.icon)) {\n      throw new InvalidConfigurationError(\"dmg.icon cannot be specified as empty string\")\n    }\n\n    const background = specification.background\n    if (specification.backgroundColor != null) {\n      if (background != null) {\n        throw new InvalidConfigurationError(\"Both dmg.backgroundColor and dmg.background are specified — please set the only one\")\n      }\n      specification.backgroundColor = computeBackgroundColor(specification.backgroundColor)\n    }\n    else if (background == null) {\n      specification.background = await computeBackground(packager)\n    }\n    else {\n      specification.background = path.resolve(packager.info.projectDir, background)\n    }\n\n    if (specification.format == null) {\n      if (process.env.ELECTRON_BUILDER_COMPRESSION_LEVEL != null) {\n        (specification as any).format = \"UDZO\"\n      }\n      else if (packager.compression === \"store\") {\n        (specification as any).format = \"UDRO\"\n      }\n      else {\n        (specification as any).format = packager.compression === \"maximum\" ? \"UDBZ\" : \"UDZO\"\n      }\n    }\n\n    if (specification.contents == null) {\n      specification.contents = [\n        {\n          x: 130, y: 220\n        },\n        {\n          x: 410, y: 220, type: \"link\", path: \"/Applications\"\n        }\n      ]\n    }\n    return specification\n  }\n}\n\nasync function createStageDmg(tempDmg: string, appPath: string, volumeName: string) {\n  //noinspection SpellCheckingInspection\n  const imageArgs = addLogLevel([\"create\",\n    \"-srcfolder\", appPath,\n    \"-volname\", volumeName,\n    \"-anyowners\", \"-nospotlight\",\n    \"-format\", \"UDRW\",\n  ])\n  imageArgs.push(\"-fs\", \"HFS+\", \"-fsargs\", \"-c c=64,a=16,e=16\")\n  imageArgs.push(tempDmg)\n  await spawn(\"hdiutil\", imageArgs)\n  return tempDmg\n}\n\nfunction addLogLevel(args: Array<string>): Array<string> {\n  args.push(process.env.DEBUG_DMG === \"true\" ? \"-verbose\" : \"-quiet\")\n  return args\n}\n\nasync function computeAssetSize(cancellationToken: CancellationToken, dmgFile: string, specification: DmgOptions, backgroundFile: string | null | undefined) {\n  const asyncTaskManager = new AsyncTaskManager(cancellationToken)\n  asyncTaskManager.addTask(stat(dmgFile))\n\n  if (specification.icon != null) {\n    asyncTaskManager.addTask(statOrNull(specification.icon))\n  }\n\n  if (backgroundFile != null) {\n    asyncTaskManager.addTask(stat(backgroundFile))\n  }\n\n  let result = 32 * 1024\n  for (const stat of await asyncTaskManager.awaitTasks()) {\n    if (stat != null) {\n      result += stat.size\n    }\n  }\n  return result\n}\n\nasync function customizeDmg(volumePath: string, specification: DmgOptions, packager: MacPackager, backgroundFile: string | null | undefined) {\n  const window = specification.window!\n  const env: any = {\n    ...process.env,\n    volumePath,\n    appFileName: `${packager.appInfo.productFilename}.app`,\n    iconSize: specification.iconSize || 80,\n    iconTextSize: specification.iconTextSize || 12,\n\n    windowX: window.x,\n    windowY: window.y,\n\n    VERSIONER_PERL_PREFER_32_BIT: \"true\"\n  }\n\n  if (specification.backgroundColor != null || specification.background == null) {\n    env.backgroundColor = specification.backgroundColor || \"#ffffff\"\n    env.windowWidth = (window.width || 540).toString()\n    env.windowHeight = (window.height || 380).toString()\n  }\n  else {\n    delete env.backgroundColor\n\n    if (window.width == null) {\n      delete env.windowWidth\n    }\n    else {\n      env.windowWidth = window.width.toString()\n    }\n    if (window.height == null) {\n      delete env.windowHeight\n    }\n    else {\n      env.windowHeight = window.height.toString()\n    }\n  }\n\n  const args = [\"dmg\", \"--volume\", volumePath]\n  if (specification.icon != null) {\n    args.push(\"--icon\", (await packager.getResource(specification.icon))!!)\n  }\n  if (backgroundFile != null) {\n    env.backgroundFilename = path.basename(backgroundFile)\n    args.push(\"--background\", backgroundFile)\n  }\n  await executeAppBuilder(args)\n\n  const asyncTaskManager = new AsyncTaskManager(packager.info.cancellationToken)\n  await applyProperties(await computeDmgEntries(specification, volumePath, packager, asyncTaskManager), env, asyncTaskManager, packager)\n  return packager.packagerOptions.effectiveOptionComputed == null || !(await packager.packagerOptions.effectiveOptionComputed({volumePath, specification, packager}))\n}\n\nasync function computeDmgEntries(specification: DmgOptions, volumePath: string, packager: MacPackager, asyncTaskManager: AsyncTaskManager) {\n  let result = \"\"\n  for (const c of specification.contents!!) {\n    if (c.path != null && c.path.endsWith(\".app\") && c.type !== \"link\") {\n      log.warn({path: c.path, reason: \"actual path to app will be used instead\"}, `do not specify path for application`)\n    }\n\n    const entryPath = c.path || `${packager.appInfo.productFilename}.app`\n    const entryName = c.name || path.basename(entryPath)\n    result += `&makeEntries(\"${entryName}\", Iloc_xy => [ ${c.x}, ${c.y} ]),\\n`\n\n    if (c.type === \"link\") {\n      asyncTaskManager.addTask(exec(\"ln\", [\"-s\", `/${entryPath.startsWith(\"/\") ? entryPath.substring(1) : entryPath}`, `${volumePath}/${entryName}`]))\n    }\n    // use c.path instead of entryPath (to be sure that this logic is not applied to .app bundle) https://github.com/electron-userland/electron-builder/issues/2147\n    else if (!isEmptyOrSpaces(c.path) && (c.type === \"file\" || c.type === \"dir\")) {\n      const source = await packager.getResource(c.path)\n      if (source == null) {\n        log.warn({entryPath, reason: \"doesn't exist\"}, `skipped DMG item copying`)\n        continue\n      }\n\n      const destination = `${volumePath}/${entryName}`\n      asyncTaskManager.addTask(c.type === \"dir\" || (await stat(source)).isDirectory() ? copyDir(source, destination) : copyFile(source, destination))\n    }\n  }\n  return result\n}"],"sourceRoot":""}
